quarkus.http.host-enabled=false
quarkus.banner.enabled = false
quarkus.devservices.enabled = false

quarkus.grpc.server.host=0.0.0.0
# If running multiple services on the same host, then you must pick an unique port
%dev.quarkus.grpc.server.port=9001
%test.quarkus.grpc.server.port=9001

quarkus.log.level=WARNING
quarkus.log.category."ai.wanaku".level=INFO
%dev.quarkus.log.category."ai.wanaku".level=INFO
%test.quarkus.log.category."ai.wanaku".level=INFO

wanaku.service.name=${name.toLowerCase()}
wanaku.service.base-uri=${name.toLowerCase()}://

# The service may have user-exposable parameters that can be set via CLI. The
# example below is exposed as "noop" with the description
# "Whether to do nothing or do something".
# wanaku.service.service.configurations.noop="Whether to do nothing or do something"

# Additionally, those parameters may also have default values, in case they are
# not set by the user
# wanaku.service.service.defaults.noop=true

# wanaku.service.registration.uri=http://localhost:8080
# Registration settings
# wanaku.service.registration.interval=10s
# wanaku.service.registration.retries=3
# wanaku.service.registration.retry-wait-seconds=1
# wanaku.service.registration.delay-seconds=3

quarkus.oidc-client.enabled=false
%dev-with-auth.quarkus.oidc-client.enabled=true
%dev-with-auth.wanaku.enable.authorization=true

# Address of the KeyCloak authentication server - adjust to your KeyCloak instance
quarkus.oidc-client.auth-server-url=http://localhost:8543/realms/wanaku

# Client identifier configured in KeyCloak for capability services
quarkus.oidc-client.client-id=wanaku-service

# Client secret from KeyCloak for service authentication - replace with your actual secret
#quarkus.oidc-client.credentials.secret=<the secret key>

